/*
 * Generated by Claude Code
 */
local variables = import './variables.libsonnet';
local g = import 'github.com/grafana/grafonnet/gen/grafonnet-latest/main.libsonnet';
local elasticsearch = g.query.elasticsearch;

{
  jobSummary: {
    query():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.RawData.settings.withSize('500')
        + elasticsearch.metrics.MetricAggregationWithSettings.RawData.withType('raw_data'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: jobSummary')
      + elasticsearch.withTimeField('timestamp'),
  },

  centralDeploymentQueueDepth: {
    addOperations():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.RawData.settings.withSize('500')
        + elasticsearch.metrics.MetricAggregationWithSettings.RawData.withType('raw_data'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "central_rox_central_sensor_event_queue" AND labels.Operation.keyword: "Add" AND labels.Type.keyword: "Deployment"')
      + elasticsearch.withTimeField('timestamp'),

    removeOperations():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.RawData.settings.withSize('500')
        + elasticsearch.metrics.MetricAggregationWithSettings.RawData.withType('raw_data'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "central_rox_central_sensor_event_queue" AND labels.Operation.keyword: "Remove" AND labels.Type.keyword: "Deployment"')
      + elasticsearch.withTimeField('timestamp'),
  },

  sensorProcessEnrichmentDrops: {
    query():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('uuid.keyword')
        + elasticsearch.bucketAggs.Terms.withId('3')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Sum.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Sum.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Sum.withType('sum'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "sensor_rox_sensor_process_enrichment_drops"')
      + elasticsearch.withTimeField('timestamp'),
  },

  acsComponentMemory: {
    maxWSS():
      elasticsearch.withAlias('WSS')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Max.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Max.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Max.withType('max'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "stackrox_container_memory_working_set_bytes" AND labels.container.keyword: $acs_component')
      + elasticsearch.withTimeField('timestamp'),

    p90WSS():
      elasticsearch.withAlias('WSS')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withType('percentiles')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.settings.withPercents(['90']),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "stackrox_container_memory_working_set_bytes" AND labels.container.keyword: $acs_component')
      + elasticsearch.withTimeField('timestamp'),
  },

  acsComponentCPU: {
    maxCPU():
      elasticsearch.withAlias('WSS')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Max.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Max.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Max.withType('max')
        + elasticsearch.metrics.MetricAggregationWithSettings.Max.settings.withScript('_value * 0.01'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "stackrox_container_cpu" AND labels.container.keyword: $acs_component')
      + elasticsearch.withTimeField('timestamp'),

    p90CPU():
      elasticsearch.withAlias('WSS')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.withType('percentiles')
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.settings.withPercents(['90'])
        + elasticsearch.metrics.MetricAggregationWithSettings.Percentiles.settings.withScript('_value * 0.01'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: "stackrox_container_cpu" AND labels.container.keyword: $acs_component')
      + elasticsearch.withTimeField('timestamp'),
  },

  nodeCPUUsage: {
    query():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('3')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: cpu-$node_roles')
      + elasticsearch.withTimeField('timestamp'),

    maxCPU():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('3')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-cpu-$node_roles')
      + elasticsearch.withTimeField('timestamp'),
  },

  nodeMemoryUsage: {
    query():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('3')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: memory-$node_roles')
      + elasticsearch.withTimeField('timestamp'),

    maxAggregated():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('3')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-memory-sum-$node_roles')
      + elasticsearch.withTimeField('timestamp'),
  },

  clusterUsageRatio: {
    maxCPU():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-cpu-cluster-usage-ratio')
      + elasticsearch.withTimeField('timestamp'),

    maxMemory():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-memory-cluster-usage-ratio')
      + elasticsearch.withTimeField('timestamp'),
  },

  podLatency: {
    p99Ready():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('6')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('7')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('P99')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: podLatencyQuantilesMeasurement AND quantileName.keyword: Ready')
      + elasticsearch.withTimeField('timestamp'),
  },

  serviceLatency: {
    p99Ready():
      elasticsearch.withAlias('')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('6')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
        elasticsearch.bucketAggs.DateHistogram.withField('timestamp')
        + elasticsearch.bucketAggs.DateHistogram.withId('7')
        + elasticsearch.bucketAggs.DateHistogram.withType('date_histogram')
        + elasticsearch.bucketAggs.DateHistogram.settings.withInterval('auto')
        + elasticsearch.bucketAggs.DateHistogram.settings.withMinDocCount('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTrimEdges('0')
        + elasticsearch.bucketAggs.DateHistogram.settings.withTimeZone('utc'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('P99')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: svcLatencyQuantilesMeasurement AND quantileName.keyword: Ready')
      + elasticsearch.withTimeField('timestamp'),
  },

  apiLatency: {
    readOnlyResource():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: avg-ro-apicalls-latency  AND labels.scope.keyword: resource')
      + elasticsearch.withTimeField('timestamp'),

    maxReadOnlyResource():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-ro-apicalls-latency AND labels.scope.keyword: resource')
      + elasticsearch.withTimeField('timestamp'),

    readOnlyNamespace():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: avg-ro-apicalls-latency AND labels.scope.keyword: namespace')
      + elasticsearch.withTimeField('timestamp'),

    maxReadOnlyNamespace():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-ro-apicalls-latency AND labels.scope.keyword: namespace')
      + elasticsearch.withTimeField('timestamp'),

    readOnlyCluster():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: avg-ro-apicalls-latency ')
      + elasticsearch.withTimeField('timestamp'),

    maxReadOnlyCluster():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-ro-apicalls-latency AND labels.scope.keyword: cluster')
      + elasticsearch.withTimeField('timestamp'),

    mutating():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: avg-mutating-apicalls-latency')
      + elasticsearch.withTimeField('timestamp'),

    maxMutating():
      elasticsearch.withAlias('Memory')
      + elasticsearch.withBucketAggs([
        elasticsearch.bucketAggs.Terms.withField('$compare_by.keyword')
        + elasticsearch.bucketAggs.Terms.withId('2')
        + elasticsearch.bucketAggs.Terms.withType('terms')
        + elasticsearch.bucketAggs.Terms.settings.withOrder('desc')
        + elasticsearch.bucketAggs.Terms.settings.withOrderBy('_term')
        + elasticsearch.bucketAggs.Terms.settings.withMinDocCount('1')
        + elasticsearch.bucketAggs.Terms.settings.withSize('10'),
      ])
      + elasticsearch.withMetrics([
        elasticsearch.metrics.MetricAggregationWithSettings.Average.withField('value')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withId('1')
        + elasticsearch.metrics.MetricAggregationWithSettings.Average.withType('avg'),
      ])
      + elasticsearch.withQuery('uuid.keyword: $uuid AND metricName.keyword: max-mutating-apicalls-latency')
      + elasticsearch.withTimeField('timestamp'),
  },
}
